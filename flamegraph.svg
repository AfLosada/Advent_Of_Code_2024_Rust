<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="7141385538"><g><title>&lt;Advent_of_Code_2024::day6::day6::Node as core::clone::Clone&gt;::clone (16,226,312 samples, 0.23%)</title><rect x="26.3814%" y="565" width="0.2272%" height="15" fill="rgb(227,0,7)" fg:x="1883996684" fg:w="16226312"/><text x="26.6314%" y="575.50"></text></g><g><title>&lt;Advent_of_Code_2024::day6::day6::NodeType as core::clone::Clone&gt;::clone (3,258,941 samples, 0.05%)</title><rect x="26.5630%" y="549" width="0.0456%" height="15" fill="rgb(217,0,24)" fg:x="1896964055" fg:w="3258941"/><text x="26.8130%" y="559.50"></text></g><g><title>&lt;Advent_of_Code_2024::day6::day6::NodeType as core::cmp::PartialEq&gt;::eq (6,513,516 samples, 0.09%)</title><rect x="26.6086%" y="565" width="0.0912%" height="15" fill="rgb(221,193,54)" fg:x="1900222996" fg:w="6513516"/><text x="26.8586%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (523,510,601 samples, 7.33%)</title><rect x="26.6998%" y="549" width="7.3307%" height="15" fill="rgb(248,212,6)" fg:x="1906736512" fg:w="523510601"/><text x="26.9498%" y="559.50">&lt;alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (523,510,601 samples, 7.33%)</title><rect x="26.6998%" y="533" width="7.3307%" height="15" fill="rgb(208,68,35)" fg:x="1906736512" fg:w="523510601"/><text x="26.9498%" y="543.50">alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (559,150,123 samples, 7.83%)</title><rect x="26.6998%" y="565" width="7.8297%" height="15" fill="rgb(232,128,0)" fg:x="1906736512" fg:w="559150123"/><text x="26.9498%" y="575.50">&lt;alloc::vec..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (35,639,522 samples, 0.50%)</title><rect x="34.0305%" y="549" width="0.4991%" height="15" fill="rgb(207,160,47)" fg:x="2430247113" fg:w="35639522"/><text x="34.2805%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (35,639,522 samples, 0.50%)</title><rect x="34.0305%" y="533" width="0.4991%" height="15" fill="rgb(228,23,34)" fg:x="2430247113" fg:w="35639522"/><text x="34.2805%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (67,562,549 samples, 0.95%)</title><rect x="34.5295%" y="549" width="0.9461%" height="15" fill="rgb(218,30,26)" fg:x="2465886635" fg:w="67562549"/><text x="34.7795%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (67,562,549 samples, 0.95%)</title><rect x="34.5295%" y="533" width="0.9461%" height="15" fill="rgb(220,122,19)" fg:x="2465886635" fg:w="67562549"/><text x="34.7795%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22,724,454 samples, 0.32%)</title><rect x="35.1574%" y="517" width="0.3182%" height="15" fill="rgb(250,228,42)" fg:x="2510724730" fg:w="22724454"/><text x="35.4074%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (22,724,454 samples, 0.32%)</title><rect x="35.1574%" y="501" width="0.3182%" height="15" fill="rgb(240,193,28)" fg:x="2510724730" fg:w="22724454"/><text x="35.4074%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (22,724,454 samples, 0.32%)</title><rect x="35.1574%" y="485" width="0.3182%" height="15" fill="rgb(216,20,37)" fg:x="2510724730" fg:w="22724454"/><text x="35.4074%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (22,724,454 samples, 0.32%)</title><rect x="35.1574%" y="469" width="0.3182%" height="15" fill="rgb(206,188,39)" fg:x="2510724730" fg:w="22724454"/><text x="35.4074%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (141,447,816 samples, 1.98%)</title><rect x="34.5295%" y="565" width="1.9807%" height="15" fill="rgb(217,207,13)" fg:x="2465886635" fg:w="141447816"/><text x="34.7795%" y="575.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (73,885,267 samples, 1.03%)</title><rect x="35.4756%" y="549" width="1.0346%" height="15" fill="rgb(231,73,38)" fg:x="2533449184" fg:w="73885267"/><text x="35.7256%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (73,885,267 samples, 1.03%)</title><rect x="35.4756%" y="533" width="1.0346%" height="15" fill="rgb(225,20,46)" fg:x="2533449184" fg:w="73885267"/><text x="35.7256%" y="543.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::Node::calculate_new_direction (6,476,179 samples, 0.09%)</title><rect x="36.5102%" y="565" width="0.0907%" height="15" fill="rgb(210,31,41)" fg:x="2607334451" fg:w="6476179"/><text x="36.7602%" y="575.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::Position&lt;i32&gt;::move_to_direction (443,587,721 samples, 6.21%)</title><rect x="36.6009%" y="565" width="6.2115%" height="15" fill="rgb(221,200,47)" fg:x="2613810630" fg:w="443587721"/><text x="36.8509%" y="575.50">Advent_o..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (45,215,832 samples, 0.63%)</title><rect x="51.1310%" y="533" width="0.6332%" height="15" fill="rgb(226,26,5)" fg:x="3651460425" fg:w="45215832"/><text x="51.3810%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (45,215,832 samples, 0.63%)</title><rect x="51.1310%" y="517" width="0.6332%" height="15" fill="rgb(249,33,26)" fg:x="3651460425" fg:w="45215832"/><text x="51.3810%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (45,215,832 samples, 0.63%)</title><rect x="51.1310%" y="501" width="0.6332%" height="15" fill="rgb(235,183,28)" fg:x="3651460425" fg:w="45215832"/><text x="51.3810%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (45,215,832 samples, 0.63%)</title><rect x="51.1310%" y="485" width="0.6332%" height="15" fill="rgb(221,5,38)" fg:x="3651460425" fg:w="45215832"/><text x="51.3810%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9,661,996 samples, 0.14%)</title><rect x="51.7641%" y="533" width="0.1353%" height="15" fill="rgb(247,18,42)" fg:x="3696676257" fg:w="9661996"/><text x="52.0141%" y="543.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::Matrices::navigate_and_get_direction (3,936,400,204 samples, 55.12%)</title><rect x="0.0000%" y="581" width="55.1210%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="3936400204"/><text x="0.2500%" y="591.50">Advent_of_Code_2024::day6::day6::Matrices::navigate_and_get_direction</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (879,001,853 samples, 12.31%)</title><rect x="42.8124%" y="565" width="12.3086%" height="15" fill="rgb(249,31,29)" fg:x="3057398351" fg:w="879001853"/><text x="43.0624%" y="575.50">alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (879,001,853 samples, 12.31%)</title><rect x="42.8124%" y="549" width="12.3086%" height="15" fill="rgb(225,111,53)" fg:x="3057398351" fg:w="879001853"/><text x="43.0624%" y="559.50">alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::write (230,061,951 samples, 3.22%)</title><rect x="51.8994%" y="533" width="3.2215%" height="15" fill="rgb(238,160,17)" fg:x="3706338253" fg:w="230061951"/><text x="52.1494%" y="543.50">cor..</text></g><g><title>[unknown] (38,211,950 samples, 0.54%)</title><rect x="54.5859%" y="517" width="0.5351%" height="15" fill="rgb(214,148,48)" fg:x="3898188254" fg:w="38211950"/><text x="54.8359%" y="527.50"></text></g><g><title>[unknown] (38,211,950 samples, 0.54%)</title><rect x="54.5859%" y="501" width="0.5351%" height="15" fill="rgb(232,36,49)" fg:x="3898188254" fg:w="38211950"/><text x="54.8359%" y="511.50"></text></g><g><title>[unknown] (38,211,950 samples, 0.54%)</title><rect x="54.5859%" y="485" width="0.5351%" height="15" fill="rgb(209,103,24)" fg:x="3898188254" fg:w="38211950"/><text x="54.8359%" y="495.50"></text></g><g><title>[unknown] (38,211,950 samples, 0.54%)</title><rect x="54.5859%" y="469" width="0.5351%" height="15" fill="rgb(229,88,8)" fg:x="3898188254" fg:w="38211950"/><text x="54.8359%" y="479.50"></text></g><g><title>[unknown] (34,962,613 samples, 0.49%)</title><rect x="54.6314%" y="453" width="0.4896%" height="15" fill="rgb(213,181,19)" fg:x="3901437591" fg:w="34962613"/><text x="54.8814%" y="463.50"></text></g><g><title>[unknown] (34,962,613 samples, 0.49%)</title><rect x="54.6314%" y="437" width="0.4896%" height="15" fill="rgb(254,191,54)" fg:x="3901437591" fg:w="34962613"/><text x="54.8814%" y="447.50"></text></g><g><title>[unknown] (25,329,734 samples, 0.35%)</title><rect x="54.7663%" y="421" width="0.3547%" height="15" fill="rgb(241,83,37)" fg:x="3911070470" fg:w="25329734"/><text x="55.0163%" y="431.50"></text></g><g><title>[unknown] (22,145,159 samples, 0.31%)</title><rect x="54.8109%" y="405" width="0.3101%" height="15" fill="rgb(233,36,39)" fg:x="3914255045" fg:w="22145159"/><text x="55.0609%" y="415.50"></text></g><g><title>[unknown] (22,145,159 samples, 0.31%)</title><rect x="54.8109%" y="389" width="0.3101%" height="15" fill="rgb(226,3,54)" fg:x="3914255045" fg:w="22145159"/><text x="55.0609%" y="399.50"></text></g><g><title>[unknown] (19,241,694 samples, 0.27%)</title><rect x="54.8515%" y="373" width="0.2694%" height="15" fill="rgb(245,192,40)" fg:x="3917158510" fg:w="19241694"/><text x="55.1015%" y="383.50"></text></g><g><title>[unknown] (19,241,694 samples, 0.27%)</title><rect x="54.8515%" y="357" width="0.2694%" height="15" fill="rgb(238,167,29)" fg:x="3917158510" fg:w="19241694"/><text x="55.1015%" y="367.50"></text></g><g><title>[unknown] (16,079,611 samples, 0.23%)</title><rect x="54.8958%" y="341" width="0.2252%" height="15" fill="rgb(232,182,51)" fg:x="3920320593" fg:w="16079611"/><text x="55.1458%" y="351.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::Matrices::find_guard (1,010,724 samples, 0.01%)</title><rect x="55.1210%" y="565" width="0.0142%" height="15" fill="rgb(231,60,39)" fg:x="3936400204" fg:w="1010724"/><text x="55.3710%" y="575.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::part_2 (2,410,409 samples, 0.03%)</title><rect x="55.1210%" y="581" width="0.0338%" height="15" fill="rgb(208,69,12)" fg:x="3936400204" fg:w="2410409"/><text x="55.3710%" y="591.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::print_matrix (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="565" width="0.0173%" height="15" fill="rgb(235,93,37)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="549" width="0.0173%" height="15" fill="rgb(213,116,39)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="533" width="0.0173%" height="15" fill="rgb(222,207,29)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="517" width="0.0173%" height="15" fill="rgb(206,96,30)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="527.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::print_matrix::{{closure}} (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="501" width="0.0173%" height="15" fill="rgb(218,138,4)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="485" width="0.0173%" height="15" fill="rgb(250,191,14)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="495.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::print_matrix::{{closure}}::{{closure}} (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="469" width="0.0173%" height="15" fill="rgb(239,60,40)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="479.50"></text></g><g><title>&lt;Advent_of_Code_2024::day6::day6::VisitDirections as alloc::string::ToString&gt;::to_string (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="453" width="0.0173%" height="15" fill="rgb(206,27,48)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="463.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="437" width="0.0173%" height="15" fill="rgb(225,35,8)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="447.50"></text></g><g><title>&lt;usize as alloc::string::SpecToString&gt;::spec_to_string (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="421" width="0.0173%" height="15" fill="rgb(250,213,24)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="431.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="405" width="0.0173%" height="15" fill="rgb(247,123,22)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="415.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="389" width="0.0173%" height="15" fill="rgb(231,138,38)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="373" width="0.0173%" height="15" fill="rgb(231,145,46)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="357" width="0.0173%" height="15" fill="rgb(251,118,11)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="341" width="0.0173%" height="15" fill="rgb(217,147,25)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="325" width="0.0173%" height="15" fill="rgb(247,81,37)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="309" width="0.0173%" height="15" fill="rgb(209,12,38)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="293" width="0.0173%" height="15" fill="rgb(227,1,9)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="277" width="0.0173%" height="15" fill="rgb(248,47,43)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="287.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="261" width="0.0173%" height="15" fill="rgb(221,10,30)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="271.50"></text></g><g><title>[libc.so.6] (1,236,337 samples, 0.02%)</title><rect x="55.1374%" y="245" width="0.0173%" height="15" fill="rgb(210,229,1)" fg:x="3937574276" fg:w="1236337"/><text x="55.3874%" y="255.50"></text></g><g><title>[Advent_of_Code_2024] (16,290,945 samples, 0.23%)</title><rect x="55.1547%" y="581" width="0.2281%" height="15" fill="rgb(222,148,37)" fg:x="3938810613" fg:w="16290945"/><text x="55.4047%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,290,945 samples, 0.23%)</title><rect x="55.1547%" y="565" width="0.2281%" height="15" fill="rgb(234,67,33)" fg:x="3938810613" fg:w="16290945"/><text x="55.4047%" y="575.50"></text></g><g><title>[libc.so.6] (3,312,625 samples, 0.05%)</title><rect x="55.3832%" y="565" width="0.0464%" height="15" fill="rgb(247,98,35)" fg:x="3955129238" fg:w="3312625"/><text x="55.6332%" y="575.50"></text></g><g><title>[libc.so.6] (22,750,974 samples, 0.32%)</title><rect x="55.3832%" y="581" width="0.3186%" height="15" fill="rgb(247,138,52)" fg:x="3955129238" fg:w="22750974"/><text x="55.6332%" y="591.50"></text></g><g><title>[unknown] (19,438,349 samples, 0.27%)</title><rect x="55.4296%" y="565" width="0.2722%" height="15" fill="rgb(213,79,30)" fg:x="3958441863" fg:w="19438349"/><text x="55.6796%" y="575.50"></text></g><g><title>[libc.so.6] (10,172,460 samples, 0.14%)</title><rect x="55.7897%" y="293" width="0.1424%" height="15" fill="rgb(246,177,23)" fg:x="3984157828" fg:w="10172460"/><text x="56.0397%" y="303.50"></text></g><g><title>[libc.so.6] (10,172,460 samples, 0.14%)</title><rect x="55.7897%" y="277" width="0.1424%" height="15" fill="rgb(230,62,27)" fg:x="3984157828" fg:w="10172460"/><text x="56.0397%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="405" width="0.1707%" height="15" fill="rgb(216,154,8)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="389" width="0.1707%" height="15" fill="rgb(244,35,45)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="373" width="0.1707%" height="15" fill="rgb(251,115,12)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="357" width="0.1707%" height="15" fill="rgb(240,54,50)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="341" width="0.1707%" height="15" fill="rgb(233,84,52)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="325" width="0.1707%" height="15" fill="rgb(207,117,47)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="335.50"></text></g><g><title>alloc::alloc::alloc (12,192,644 samples, 0.17%)</title><rect x="55.7897%" y="309" width="0.1707%" height="15" fill="rgb(249,43,39)" fg:x="3984157828" fg:w="12192644"/><text x="56.0397%" y="319.50"></text></g><g><title>malloc (2,020,184 samples, 0.03%)</title><rect x="55.9321%" y="293" width="0.0283%" height="15" fill="rgb(209,38,44)" fg:x="3994330288" fg:w="2020184"/><text x="56.1821%" y="303.50"></text></g><g><title>&lt;Advent_of_Code_2024::day6::day6::VisitDirections as core::clone::Clone&gt;::clone (16,620,450 samples, 0.23%)</title><rect x="55.7897%" y="469" width="0.2327%" height="15" fill="rgb(236,212,23)" fg:x="3984157828" fg:w="16620450"/><text x="56.0397%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,620,450 samples, 0.23%)</title><rect x="55.7897%" y="453" width="0.2327%" height="15" fill="rgb(242,79,21)" fg:x="3984157828" fg:w="16620450"/><text x="56.0397%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,620,450 samples, 0.23%)</title><rect x="55.7897%" y="437" width="0.2327%" height="15" fill="rgb(211,96,35)" fg:x="3984157828" fg:w="16620450"/><text x="56.0397%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (16,620,450 samples, 0.23%)</title><rect x="55.7897%" y="421" width="0.2327%" height="15" fill="rgb(253,215,40)" fg:x="3984157828" fg:w="16620450"/><text x="56.0397%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4,427,806 samples, 0.06%)</title><rect x="55.9604%" y="405" width="0.0620%" height="15" fill="rgb(211,81,21)" fg:x="3996350472" fg:w="4427806"/><text x="56.2104%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,930,918 samples, 0.11%)</title><rect x="56.0224%" y="469" width="0.1111%" height="15" fill="rgb(208,190,38)" fg:x="4000778278" fg:w="7930918"/><text x="56.2724%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,930,918 samples, 0.11%)</title><rect x="56.0224%" y="453" width="0.1111%" height="15" fill="rgb(235,213,38)" fg:x="4000778278" fg:w="7930918"/><text x="56.2724%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,930,918 samples, 0.11%)</title><rect x="56.0224%" y="437" width="0.1111%" height="15" fill="rgb(237,122,38)" fg:x="4000778278" fg:w="7930918"/><text x="56.2724%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="469" width="0.0206%" height="15" fill="rgb(244,218,35)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="453" width="0.0206%" height="15" fill="rgb(240,68,47)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="437" width="0.0206%" height="15" fill="rgb(210,16,53)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="421" width="0.0206%" height="15" fill="rgb(235,124,12)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="405" width="0.0206%" height="15" fill="rgb(224,169,11)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="389" width="0.0206%" height="15" fill="rgb(250,166,2)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="373" width="0.0206%" height="15" fill="rgb(242,216,29)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="383.50"></text></g><g><title>[libc.so.6] (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="357" width="0.0206%" height="15" fill="rgb(230,116,27)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="367.50"></text></g><g><title>[libc.so.6] (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="341" width="0.0206%" height="15" fill="rgb(228,99,48)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="351.50"></text></g><g><title>[unknown] (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="325" width="0.0206%" height="15" fill="rgb(253,11,6)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="335.50"></text></g><g><title>[unknown] (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="309" width="0.0206%" height="15" fill="rgb(247,143,39)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="319.50"></text></g><g><title>[unknown] (1,470,929 samples, 0.02%)</title><rect x="56.1335%" y="293" width="0.0206%" height="15" fill="rgb(236,97,10)" fg:x="4008709196" fg:w="1470929"/><text x="56.3835%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="565" width="0.4162%" height="15" fill="rgb(233,208,19)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="549" width="0.4162%" height="15" fill="rgb(216,164,2)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="533" width="0.4162%" height="15" fill="rgb(220,129,5)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="517" width="0.4162%" height="15" fill="rgb(242,17,10)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="501" width="0.4162%" height="15" fill="rgb(242,107,0)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (29,721,253 samples, 0.42%)</title><rect x="55.7461%" y="485" width="0.4162%" height="15" fill="rgb(251,28,31)" fg:x="3981043537" fg:w="29721253"/><text x="55.9961%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6,459,665 samples, 0.09%)</title><rect x="56.1623%" y="565" width="0.0905%" height="15" fill="rgb(233,223,10)" fg:x="4010764790" fg:w="6459665"/><text x="56.4123%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,258,730 samples, 0.05%)</title><rect x="56.2071%" y="549" width="0.0456%" height="15" fill="rgb(215,21,27)" fg:x="4013965725" fg:w="3258730"/><text x="56.4571%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,258,730 samples, 0.05%)</title><rect x="56.2071%" y="533" width="0.0456%" height="15" fill="rgb(232,23,21)" fg:x="4013965725" fg:w="3258730"/><text x="56.4571%" y="543.50"></text></g><g><title>[libc.so.6] (19,573,279 samples, 0.27%)</title><rect x="56.5648%" y="485" width="0.2741%" height="15" fill="rgb(244,5,23)" fg:x="4039513153" fg:w="19573279"/><text x="56.8148%" y="495.50"></text></g><g><title>[unknown] (19,573,279 samples, 0.27%)</title><rect x="56.5648%" y="469" width="0.2741%" height="15" fill="rgb(226,81,46)" fg:x="4039513153" fg:w="19573279"/><text x="56.8148%" y="479.50"></text></g><g><title>[unknown] (3,240,789 samples, 0.05%)</title><rect x="56.7935%" y="453" width="0.0454%" height="15" fill="rgb(247,70,30)" fg:x="4055845643" fg:w="3240789"/><text x="57.0435%" y="463.50"></text></g><g><title>[unknown] (41,815,126 samples, 0.59%)</title><rect x="56.5648%" y="501" width="0.5855%" height="15" fill="rgb(212,68,19)" fg:x="4039513153" fg:w="41815126"/><text x="56.8148%" y="511.50"></text></g><g><title>__rustc::__rdl_realloc (22,241,847 samples, 0.31%)</title><rect x="56.8389%" y="485" width="0.3115%" height="15" fill="rgb(240,187,13)" fg:x="4059086432" fg:w="22241847"/><text x="57.0889%" y="495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (22,241,847 samples, 0.31%)</title><rect x="56.8389%" y="469" width="0.3115%" height="15" fill="rgb(223,113,26)" fg:x="4059086432" fg:w="22241847"/><text x="57.0889%" y="479.50"></text></g><g><title>__rustc::__rdl_realloc (16,246,128 samples, 0.23%)</title><rect x="57.1504%" y="501" width="0.2275%" height="15" fill="rgb(206,192,2)" fg:x="4081328279" fg:w="16246128"/><text x="57.4004%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9,756,695 samples, 0.14%)</title><rect x="57.2412%" y="485" width="0.1366%" height="15" fill="rgb(241,108,4)" fg:x="4087817712" fg:w="9756695"/><text x="57.4912%" y="495.50"></text></g><g><title>[unknown] (3,210,825 samples, 0.04%)</title><rect x="60.8477%" y="437" width="0.0450%" height="15" fill="rgb(247,173,49)" fg:x="4345371191" fg:w="3210825"/><text x="61.0977%" y="447.50"></text></g><g><title>[libc.so.6] (26,039,500 samples, 0.36%)</title><rect x="60.8015%" y="469" width="0.3646%" height="15" fill="rgb(224,114,35)" fg:x="4342067288" fg:w="26039500"/><text x="61.0515%" y="479.50"></text></g><g><title>[libc.so.6] (26,039,500 samples, 0.36%)</title><rect x="60.8015%" y="453" width="0.3646%" height="15" fill="rgb(245,159,27)" fg:x="4342067288" fg:w="26039500"/><text x="61.0515%" y="463.50"></text></g><g><title>__default_morecore (19,524,772 samples, 0.27%)</title><rect x="60.8927%" y="437" width="0.2734%" height="15" fill="rgb(245,172,44)" fg:x="4348582016" fg:w="19524772"/><text x="61.1427%" y="447.50"></text></g><g><title>__sbrk (19,524,772 samples, 0.27%)</title><rect x="60.8927%" y="421" width="0.2734%" height="15" fill="rgb(236,23,11)" fg:x="4348582016" fg:w="19524772"/><text x="61.1427%" y="431.50"></text></g><g><title>brk (19,524,772 samples, 0.27%)</title><rect x="60.8927%" y="405" width="0.2734%" height="15" fill="rgb(205,117,38)" fg:x="4348582016" fg:w="19524772"/><text x="61.1427%" y="415.50"></text></g><g><title>[unknown] (19,524,772 samples, 0.27%)</title><rect x="60.8927%" y="389" width="0.2734%" height="15" fill="rgb(237,72,25)" fg:x="4348582016" fg:w="19524772"/><text x="61.1427%" y="399.50"></text></g><g><title>[unknown] (19,524,772 samples, 0.27%)</title><rect x="60.8927%" y="373" width="0.2734%" height="15" fill="rgb(244,70,9)" fg:x="4348582016" fg:w="19524772"/><text x="61.1427%" y="383.50"></text></g><g><title>[unknown] (16,302,061 samples, 0.23%)</title><rect x="60.9378%" y="357" width="0.2283%" height="15" fill="rgb(217,125,39)" fg:x="4351804727" fg:w="16302061"/><text x="61.1878%" y="367.50"></text></g><g><title>[unknown] (16,302,061 samples, 0.23%)</title><rect x="60.9378%" y="341" width="0.2283%" height="15" fill="rgb(235,36,10)" fg:x="4351804727" fg:w="16302061"/><text x="61.1878%" y="351.50"></text></g><g><title>[unknown] (12,971,156 samples, 0.18%)</title><rect x="60.9845%" y="325" width="0.1816%" height="15" fill="rgb(251,123,47)" fg:x="4355135632" fg:w="12971156"/><text x="61.2345%" y="335.50"></text></g><g><title>[unknown] (12,971,156 samples, 0.18%)</title><rect x="60.9845%" y="309" width="0.1816%" height="15" fill="rgb(221,13,13)" fg:x="4355135632" fg:w="12971156"/><text x="61.2345%" y="319.50"></text></g><g><title>[unknown] (6,496,794 samples, 0.09%)</title><rect x="61.0751%" y="293" width="0.0910%" height="15" fill="rgb(238,131,9)" fg:x="4361609994" fg:w="6496794"/><text x="61.3251%" y="303.50"></text></g><g><title>[unknown] (6,496,794 samples, 0.09%)</title><rect x="61.0751%" y="277" width="0.0910%" height="15" fill="rgb(211,50,8)" fg:x="4361609994" fg:w="6496794"/><text x="61.3251%" y="287.50"></text></g><g><title>[unknown] (6,496,794 samples, 0.09%)</title><rect x="61.0751%" y="261" width="0.0910%" height="15" fill="rgb(245,182,24)" fg:x="4361609994" fg:w="6496794"/><text x="61.3251%" y="271.50"></text></g><g><title>[unknown] (1,306,447,301 samples, 18.29%)</title><rect x="55.7018%" y="581" width="18.2940%" height="15" fill="rgb(242,14,37)" fg:x="3977880212" fg:w="1306447301"/><text x="55.9518%" y="591.50">[unknown]</text></g><g><title>alloc::raw_vec::finish_grow (1,267,103,058 samples, 17.74%)</title><rect x="56.2527%" y="565" width="17.7431%" height="15" fill="rgb(246,228,12)" fg:x="4017224455" fg:w="1267103058"/><text x="56.5027%" y="575.50">alloc::raw_vec::finish_grow</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,248,024,407 samples, 17.48%)</title><rect x="56.5199%" y="549" width="17.4759%" height="15" fill="rgb(213,55,15)" fg:x="4036303106" fg:w="1248024407"/><text x="56.7699%" y="559.50">&lt;alloc::alloc::Global as co..</text></g><g><title>alloc::alloc::Global::grow_impl (1,248,024,407 samples, 17.48%)</title><rect x="56.5199%" y="533" width="17.4759%" height="15" fill="rgb(209,9,3)" fg:x="4036303106" fg:w="1248024407"/><text x="56.7699%" y="543.50">alloc::alloc::Global::grow_..</text></g><g><title>alloc::alloc::realloc (1,248,024,407 samples, 17.48%)</title><rect x="56.5199%" y="517" width="17.4759%" height="15" fill="rgb(230,59,30)" fg:x="4036303106" fg:w="1248024407"/><text x="56.7699%" y="527.50">alloc::alloc::realloc</text></g><g><title>realloc (1,186,753,106 samples, 16.62%)</title><rect x="57.3779%" y="501" width="16.6180%" height="15" fill="rgb(209,121,21)" fg:x="4097574407" fg:w="1186753106"/><text x="57.6279%" y="511.50">realloc</text></g><g><title>[libc.so.6] (1,058,640,122 samples, 14.82%)</title><rect x="59.1718%" y="485" width="14.8240%" height="15" fill="rgb(220,109,13)" fg:x="4225687391" fg:w="1058640122"/><text x="59.4218%" y="495.50">[libc.so.6]</text></g><g><title>[unknown] (916,220,725 samples, 12.83%)</title><rect x="61.1661%" y="469" width="12.8297%" height="15" fill="rgb(232,18,1)" fg:x="4368106788" fg:w="916220725"/><text x="61.4161%" y="479.50">[unknown]</text></g><g><title>[unknown] (765,533,402 samples, 10.72%)</title><rect x="63.2762%" y="453" width="10.7197%" height="15" fill="rgb(215,41,42)" fg:x="4518794111" fg:w="765533402"/><text x="63.5262%" y="463.50">[unknown]</text></g><g><title>[unknown] (704,582,470 samples, 9.87%)</title><rect x="64.1296%" y="437" width="9.8662%" height="15" fill="rgb(224,123,36)" fg:x="4579745043" fg:w="704582470"/><text x="64.3796%" y="447.50">[unknown]</text></g><g><title>[unknown] (691,636,696 samples, 9.68%)</title><rect x="64.3109%" y="421" width="9.6849%" height="15" fill="rgb(240,125,3)" fg:x="4592690817" fg:w="691636696"/><text x="64.5609%" y="431.50">[unknown]</text></g><g><title>[unknown] (643,229,496 samples, 9.01%)</title><rect x="64.9888%" y="405" width="9.0071%" height="15" fill="rgb(205,98,50)" fg:x="4641098017" fg:w="643229496"/><text x="65.2388%" y="415.50">[unknown]</text></g><g><title>[unknown] (565,778,691 samples, 7.92%)</title><rect x="66.0733%" y="389" width="7.9225%" height="15" fill="rgb(205,185,37)" fg:x="4718548822" fg:w="565778691"/><text x="66.3233%" y="399.50">[unknown]</text></g><g><title>[unknown] (498,184,474 samples, 6.98%)</title><rect x="67.0198%" y="373" width="6.9760%" height="15" fill="rgb(238,207,15)" fg:x="4786143039" fg:w="498184474"/><text x="67.2698%" y="383.50">[unknown]</text></g><g><title>[unknown] (407,809,521 samples, 5.71%)</title><rect x="68.2853%" y="357" width="5.7105%" height="15" fill="rgb(213,199,42)" fg:x="4876517992" fg:w="407809521"/><text x="68.5353%" y="367.50">[unknow..</text></g><g><title>[unknown] (320,624,139 samples, 4.49%)</title><rect x="69.5062%" y="341" width="4.4897%" height="15" fill="rgb(235,201,11)" fg:x="4963703374" fg:w="320624139"/><text x="69.7562%" y="351.50">[unkn..</text></g><g><title>[unknown] (297,825,981 samples, 4.17%)</title><rect x="69.8254%" y="325" width="4.1704%" height="15" fill="rgb(207,46,11)" fg:x="4986501532" fg:w="297825981"/><text x="70.0754%" y="335.50">[unkn..</text></g><g><title>[unknown] (253,487,353 samples, 3.55%)</title><rect x="70.4463%" y="309" width="3.5496%" height="15" fill="rgb(241,35,35)" fg:x="5030840160" fg:w="253487353"/><text x="70.6963%" y="319.50">[unk..</text></g><g><title>[unknown] (212,099,359 samples, 2.97%)</title><rect x="71.0258%" y="293" width="2.9700%" height="15" fill="rgb(243,32,47)" fg:x="5072228154" fg:w="212099359"/><text x="71.2758%" y="303.50">[un..</text></g><g><title>__rustc::__rdl_alloc (10,601,736 samples, 0.15%)</title><rect x="73.9958%" y="581" width="0.1485%" height="15" fill="rgb(247,202,23)" fg:x="5284327513" fg:w="10601736"/><text x="74.2458%" y="591.50"></text></g><g><title>__rustc::__rust_alloc (16,230,641 samples, 0.23%)</title><rect x="74.1443%" y="581" width="0.2273%" height="15" fill="rgb(219,102,11)" fg:x="5294929249" fg:w="16230641"/><text x="74.3943%" y="591.50"></text></g><g><title>__rustc::__rust_no_alloc_shim_is_unstable_v2 (16,205,159 samples, 0.23%)</title><rect x="74.3716%" y="581" width="0.2269%" height="15" fill="rgb(243,110,44)" fg:x="5311159890" fg:w="16205159"/><text x="74.6216%" y="591.50"></text></g><g><title>__rustc::__rust_realloc (35,312,364 samples, 0.49%)</title><rect x="74.5985%" y="581" width="0.4945%" height="15" fill="rgb(222,74,54)" fg:x="5327365049" fg:w="35312364"/><text x="74.8485%" y="591.50"></text></g><g><title>&lt;Advent_of_Code_2024::day6::day6::Position&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9,600,226 samples, 0.13%)</title><rect x="77.2611%" y="229" width="0.1344%" height="15" fill="rgb(216,99,12)" fg:x="5517512697" fg:w="9600226"/><text x="77.5111%" y="239.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::part_2::{{closure}}::{{closure}}::{{closure}} (61,180,243 samples, 0.86%)</title><rect x="76.6756%" y="245" width="0.8567%" height="15" fill="rgb(226,22,26)" fg:x="5475702987" fg:w="61180243"/><text x="76.9256%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (9,770,307 samples, 0.14%)</title><rect x="77.3955%" y="229" width="0.1368%" height="15" fill="rgb(217,163,10)" fg:x="5527112923" fg:w="9770307"/><text x="77.6455%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,078,352 samples, 0.23%)</title><rect x="77.5323%" y="245" width="0.2251%" height="15" fill="rgb(213,25,53)" fg:x="5536883230" fg:w="16078352"/><text x="77.7823%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (16,078,352 samples, 0.23%)</title><rect x="77.5323%" y="229" width="0.2251%" height="15" fill="rgb(252,105,26)" fg:x="5536883230" fg:w="16078352"/><text x="77.7823%" y="239.50"></text></g><g><title>Advent_of_Code_2024::day6::day6::navigate (206,411,025 samples, 2.89%)</title><rect x="75.0930%" y="261" width="2.8903%" height="15" fill="rgb(220,39,43)" fg:x="5362677413" fg:w="206411025"/><text x="75.3430%" y="271.50">Ad..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (16,126,856 samples, 0.23%)</title><rect x="77.7575%" y="245" width="0.2258%" height="15" fill="rgb(229,68,48)" fg:x="5552961582" fg:w="16126856"/><text x="78.0075%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::Path&gt;&gt; (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="245" width="0.0483%" height="15" fill="rgb(252,8,32)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="229" width="0.0483%" height="15" fill="rgb(223,20,43)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[Advent_of_Code_2024::day6::day6::Path]&gt; (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="213" width="0.0483%" height="15" fill="rgb(229,81,49)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;Advent_of_Code_2024::day6::day6::Path&gt; (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="197" width="0.0483%" height="15" fill="rgb(236,28,36)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::Node&gt;&gt; (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="181" width="0.0483%" height="15" fill="rgb(249,185,26)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;Advent_of_Code_2024::day6::day6::Node&gt;&gt; (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="165" width="0.0483%" height="15" fill="rgb(249,174,33)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="149" width="0.0483%" height="15" fill="rgb(233,201,37)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="133" width="0.0483%" height="15" fill="rgb(221,78,26)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="117" width="0.0483%" height="15" fill="rgb(250,127,30)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="101" width="0.0483%" height="15" fill="rgb(230,49,44)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="111.50"></text></g><g><title>[libc.so.6] (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="85" width="0.0483%" height="15" fill="rgb(229,67,23)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="95.50"></text></g><g><title>[libc.so.6] (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="69" width="0.0483%" height="15" fill="rgb(249,83,47)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="79.50"></text></g><g><title>[libc.so.6] (3,451,343 samples, 0.05%)</title><rect x="77.9833%" y="53" width="0.0483%" height="15" fill="rgb(215,43,3)" fg:x="5569088438" fg:w="3451343"/><text x="78.2333%" y="63.50"></text></g><g><title>_start (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="581" width="3.0243%" height="15" fill="rgb(238,154,13)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="591.50">_st..</text></g><g><title>__libc_start_main (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="565" width="3.0243%" height="15" fill="rgb(219,56,2)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="575.50">__l..</text></g><g><title>main (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="549" width="3.0243%" height="15" fill="rgb(233,0,4)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="559.50">main</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="533" width="3.0243%" height="15" fill="rgb(235,30,7)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="543.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="517" width="3.0243%" height="15" fill="rgb(250,79,13)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="527.50">cor..</text></g><g><title>Advent_of_Code_2024::day6::day6::part_2 (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="501" width="3.0243%" height="15" fill="rgb(211,146,34)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="511.50">Adv..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="485" width="3.0243%" height="15" fill="rgb(228,22,38)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="495.50">cor..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="469" width="3.0243%" height="15" fill="rgb(235,168,5)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="479.50">&lt;us..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="453" width="3.0243%" height="15" fill="rgb(221,155,16)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="463.50">&lt;co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="437" width="3.0243%" height="15" fill="rgb(215,215,53)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="447.50">&lt;co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="421" width="3.0243%" height="15" fill="rgb(223,4,10)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="431.50">cor..</text></g><g><title>Advent_of_Code_2024::day6::day6::part_2::{{closure}} (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="405" width="3.0243%" height="15" fill="rgb(234,103,6)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="415.50">Adv..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="389" width="3.0243%" height="15" fill="rgb(227,97,0)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="399.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="373" width="3.0243%" height="15" fill="rgb(234,150,53)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="383.50">cor..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="357" width="3.0243%" height="15" fill="rgb(228,201,54)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="367.50">&lt;us..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="341" width="3.0243%" height="15" fill="rgb(222,22,37)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="351.50">&lt;co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="325" width="3.0243%" height="15" fill="rgb(237,53,32)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="335.50">&lt;co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="309" width="3.0243%" height="15" fill="rgb(233,25,53)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="319.50">cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="293" width="3.0243%" height="15" fill="rgb(210,40,34)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="303.50">&lt;co..</text></g><g><title>Advent_of_Code_2024::day6::day6::part_2::{{closure}}::{{closure}} (215,978,788 samples, 3.02%)</title><rect x="75.0930%" y="277" width="3.0243%" height="15" fill="rgb(241,220,44)" fg:x="5362677413" fg:w="215978788"/><text x="75.3430%" y="287.50">Adv..</text></g><g><title>core::ptr::drop_in_place&lt;Advent_of_Code_2024::day6::day6::Matrices&gt; (9,567,763 samples, 0.13%)</title><rect x="77.9833%" y="261" width="0.1340%" height="15" fill="rgb(235,28,35)" fg:x="5569088438" fg:w="9567763"/><text x="78.2333%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;&gt;&gt; (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="245" width="0.0856%" height="15" fill="rgb(210,56,17)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="229" width="0.0856%" height="15" fill="rgb(224,130,29)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;]&gt; (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="213" width="0.0856%" height="15" fill="rgb(235,212,8)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;&gt; (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="197" width="0.0856%" height="15" fill="rgb(223,33,50)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="181" width="0.0856%" height="15" fill="rgb(219,149,13)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[Advent_of_Code_2024::day6::day6::VisitDirections]&gt; (6,116,420 samples, 0.09%)</title><rect x="78.0316%" y="165" width="0.0856%" height="15" fill="rgb(250,156,29)" fg:x="5572539781" fg:w="6116420"/><text x="78.2816%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt; (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="149" width="0.0856%" height="15" fill="rgb(216,193,19)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::Direction&gt;&gt; (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="133" width="0.0856%" height="15" fill="rgb(216,135,14)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;Advent_of_Code_2024::day6::day6::Direction&gt;&gt; (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="117" width="0.0856%" height="15" fill="rgb(241,47,5)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="101" width="0.0856%" height="15" fill="rgb(233,42,35)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="85" width="0.0856%" height="15" fill="rgb(231,13,6)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="69" width="0.0856%" height="15" fill="rgb(207,181,40)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (6,115,798 samples, 0.09%)</title><rect x="78.0316%" y="53" width="0.0856%" height="15" fill="rgb(254,173,49)" fg:x="5572540403" fg:w="6115798"/><text x="78.2816%" y="63.50"></text></g><g><title>cfree (6,096,461 samples, 0.09%)</title><rect x="78.0319%" y="37" width="0.0854%" height="15" fill="rgb(221,1,38)" fg:x="5572559740" fg:w="6096461"/><text x="78.2819%" y="47.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (29,328,106 samples, 0.41%)</title><rect x="79.7469%" y="533" width="0.4107%" height="15" fill="rgb(206,124,46)" fg:x="5695031650" fg:w="29328106"/><text x="79.9969%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (16,270,293 samples, 0.23%)</title><rect x="80.1576%" y="533" width="0.2278%" height="15" fill="rgb(249,21,11)" fg:x="5724359756" fg:w="16270293"/><text x="80.4076%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (16,139,125 samples, 0.23%)</title><rect x="80.3854%" y="533" width="0.2260%" height="15" fill="rgb(222,201,40)" fg:x="5740630049" fg:w="16139125"/><text x="80.6354%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,274,409 samples, 0.05%)</title><rect x="80.6114%" y="533" width="0.0459%" height="15" fill="rgb(235,61,29)" fg:x="5756769174" fg:w="3274409"/><text x="80.8614%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3,274,409 samples, 0.05%)</title><rect x="80.6114%" y="517" width="0.0459%" height="15" fill="rgb(219,207,3)" fg:x="5756769174" fg:w="3274409"/><text x="80.8614%" y="527.50"></text></g><g><title>core::intrinsics::unlikely (19,378,625 samples, 0.27%)</title><rect x="80.6572%" y="469" width="0.2714%" height="15" fill="rgb(222,56,46)" fg:x="5760043583" fg:w="19378625"/><text x="80.9072%" y="479.50"></text></g><g><title>alloc::raw_vec::layout_array (41,971,724 samples, 0.59%)</title><rect x="80.6572%" y="533" width="0.5877%" height="15" fill="rgb(239,76,54)" fg:x="5760043583" fg:w="41971724"/><text x="80.9072%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::repeat (41,971,724 samples, 0.59%)</title><rect x="80.6572%" y="517" width="0.5877%" height="15" fill="rgb(231,124,27)" fg:x="5760043583" fg:w="41971724"/><text x="80.9072%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (41,971,724 samples, 0.59%)</title><rect x="80.6572%" y="501" width="0.5877%" height="15" fill="rgb(249,195,6)" fg:x="5760043583" fg:w="41971724"/><text x="80.9072%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (41,971,724 samples, 0.59%)</title><rect x="80.6572%" y="485" width="0.5877%" height="15" fill="rgb(237,174,47)" fg:x="5760043583" fg:w="41971724"/><text x="80.9072%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (22,593,099 samples, 0.32%)</title><rect x="80.9286%" y="469" width="0.3164%" height="15" fill="rgb(206,201,31)" fg:x="5779422208" fg:w="22593099"/><text x="81.1786%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (249,011,293 samples, 3.49%)</title><rect x="78.1173%" y="581" width="3.4869%" height="15" fill="rgb(231,57,52)" fg:x="5578656201" fg:w="249011293"/><text x="78.3673%" y="591.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (239,309,727 samples, 3.35%)</title><rect x="78.2531%" y="565" width="3.3510%" height="15" fill="rgb(248,177,22)" fg:x="5588357767" fg:w="239309727"/><text x="78.5031%" y="575.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (132,635,844 samples, 1.86%)</title><rect x="79.7469%" y="549" width="1.8573%" height="15" fill="rgb(215,211,37)" fg:x="5695031650" fg:w="132635844"/><text x="79.9969%" y="559.50">a..</text></g><g><title>core::cmp::max (25,652,187 samples, 0.36%)</title><rect x="81.2450%" y="533" width="0.3592%" height="15" fill="rgb(241,128,51)" fg:x="5802015307" fg:w="25652187"/><text x="81.4950%" y="543.50"></text></g><g><title>core::cmp::Ord::max (25,652,187 samples, 0.36%)</title><rect x="81.2450%" y="517" width="0.3592%" height="15" fill="rgb(227,165,31)" fg:x="5802015307" fg:w="25652187"/><text x="81.4950%" y="527.50"></text></g><g><title>[libc.so.6] (48,482,903 samples, 0.68%)</title><rect x="86.4374%" y="533" width="0.6789%" height="15" fill="rgb(228,167,24)" fg:x="6172828248" fg:w="48482903"/><text x="86.6874%" y="543.50"></text></g><g><title>__default_morecore (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="517" width="0.4984%" height="15" fill="rgb(228,143,12)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="527.50"></text></g><g><title>__sbrk (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="501" width="0.4984%" height="15" fill="rgb(249,149,8)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="511.50"></text></g><g><title>brk (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="485" width="0.4984%" height="15" fill="rgb(243,35,44)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="495.50"></text></g><g><title>[unknown] (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="469" width="0.4984%" height="15" fill="rgb(246,89,9)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="479.50"></text></g><g><title>[unknown] (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="453" width="0.4984%" height="15" fill="rgb(233,213,13)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="463.50"></text></g><g><title>[unknown] (35,589,642 samples, 0.50%)</title><rect x="86.6179%" y="437" width="0.4984%" height="15" fill="rgb(233,141,41)" fg:x="6185721509" fg:w="35589642"/><text x="86.8679%" y="447.50"></text></g><g><title>[unknown] (29,096,545 samples, 0.41%)</title><rect x="86.7089%" y="421" width="0.4074%" height="15" fill="rgb(239,167,4)" fg:x="6192214606" fg:w="29096545"/><text x="86.9589%" y="431.50"></text></g><g><title>[unknown] (22,566,734 samples, 0.32%)</title><rect x="86.8003%" y="405" width="0.3160%" height="15" fill="rgb(209,217,16)" fg:x="6198744417" fg:w="22566734"/><text x="87.0503%" y="415.50"></text></g><g><title>[unknown] (6,435,571 samples, 0.09%)</title><rect x="87.0262%" y="389" width="0.0901%" height="15" fill="rgb(219,88,35)" fg:x="6214875580" fg:w="6435571"/><text x="87.2762%" y="399.50"></text></g><g><title>[unknown] (3,239,978 samples, 0.05%)</title><rect x="87.0709%" y="373" width="0.0454%" height="15" fill="rgb(220,193,23)" fg:x="6218071173" fg:w="3239978"/><text x="87.3209%" y="383.50"></text></g><g><title>[unknown] (3,239,978 samples, 0.05%)</title><rect x="87.0709%" y="357" width="0.0454%" height="15" fill="rgb(230,90,52)" fg:x="6218071173" fg:w="3239978"/><text x="87.3209%" y="367.50"></text></g><g><title>[libc.so.6] (1,206,091,814 samples, 16.89%)</title><rect x="81.9218%" y="565" width="16.8888%" height="15" fill="rgb(252,106,19)" fg:x="5850354499" fg:w="1206091814"/><text x="82.1718%" y="575.50">[libc.so.6]</text></g><g><title>[libc.so.6] (1,154,759,386 samples, 16.17%)</title><rect x="82.6406%" y="549" width="16.1700%" height="15" fill="rgb(206,74,20)" fg:x="5901686927" fg:w="1154759386"/><text x="82.8906%" y="559.50">[libc.so.6]</text></g><g><title>[unknown] (835,135,162 samples, 11.69%)</title><rect x="87.1163%" y="533" width="11.6943%" height="15" fill="rgb(230,138,44)" fg:x="6221311151" fg:w="835135162"/><text x="87.3663%" y="543.50">[unknown]</text></g><g><title>[unknown] (716,063,568 samples, 10.03%)</title><rect x="88.7837%" y="517" width="10.0270%" height="15" fill="rgb(235,182,43)" fg:x="6340382745" fg:w="716063568"/><text x="89.0337%" y="527.50">[unknown]</text></g><g><title>[unknown] (681,149,817 samples, 9.54%)</title><rect x="89.2725%" y="501" width="9.5381%" height="15" fill="rgb(242,16,51)" fg:x="6375296496" fg:w="681149817"/><text x="89.5225%" y="511.50">[unknown]</text></g><g><title>[unknown] (668,312,813 samples, 9.36%)</title><rect x="89.4523%" y="485" width="9.3583%" height="15" fill="rgb(248,9,4)" fg:x="6388133500" fg:w="668312813"/><text x="89.7023%" y="495.50">[unknown]</text></g><g><title>[unknown] (645,638,194 samples, 9.04%)</title><rect x="89.7698%" y="469" width="9.0408%" height="15" fill="rgb(210,31,22)" fg:x="6410808119" fg:w="645638194"/><text x="90.0198%" y="479.50">[unknown]</text></g><g><title>[unknown] (568,570,565 samples, 7.96%)</title><rect x="90.8490%" y="453" width="7.9616%" height="15" fill="rgb(239,54,39)" fg:x="6487875748" fg:w="568570565"/><text x="91.0990%" y="463.50">[unknown]</text></g><g><title>[unknown] (514,077,034 samples, 7.20%)</title><rect x="91.6120%" y="437" width="7.1986%" height="15" fill="rgb(230,99,41)" fg:x="6542369279" fg:w="514077034"/><text x="91.8620%" y="447.50">[unknown]</text></g><g><title>[unknown] (439,917,432 samples, 6.16%)</title><rect x="92.6505%" y="421" width="6.1601%" height="15" fill="rgb(253,106,12)" fg:x="6616528881" fg:w="439917432"/><text x="92.9005%" y="431.50">[unknown]</text></g><g><title>[unknown] (361,122,917 samples, 5.06%)</title><rect x="93.7538%" y="405" width="5.0568%" height="15" fill="rgb(213,46,41)" fg:x="6695323396" fg:w="361122917"/><text x="94.0038%" y="415.50">[unkno..</text></g><g><title>[unknown] (318,789,447 samples, 4.46%)</title><rect x="94.3466%" y="389" width="4.4640%" height="15" fill="rgb(215,133,35)" fg:x="6737656866" fg:w="318789447"/><text x="94.5966%" y="399.50">[unkn..</text></g><g><title>[unknown] (283,010,004 samples, 3.96%)</title><rect x="94.8476%" y="373" width="3.9630%" height="15" fill="rgb(213,28,5)" fg:x="6773436309" fg:w="283010004"/><text x="95.0976%" y="383.50">[unk..</text></g><g><title>[unknown] (253,979,312 samples, 3.56%)</title><rect x="95.2542%" y="357" width="3.5564%" height="15" fill="rgb(215,77,49)" fg:x="6802467001" fg:w="253979312"/><text x="95.5042%" y="367.50">[unk..</text></g><g><title>[unknown] (3,288,312 samples, 0.05%)</title><rect x="98.7646%" y="341" width="0.0460%" height="15" fill="rgb(248,100,22)" fg:x="7053158001" fg:w="3288312"/><text x="99.0146%" y="351.50"></text></g><g><title>[unknown] (3,288,312 samples, 0.05%)</title><rect x="98.7646%" y="325" width="0.0460%" height="15" fill="rgb(208,67,9)" fg:x="7053158001" fg:w="3288312"/><text x="99.0146%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (28,701,788 samples, 0.40%)</title><rect x="98.8106%" y="565" width="0.4019%" height="15" fill="rgb(219,133,21)" fg:x="7056446313" fg:w="28701788"/><text x="99.0606%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,301,595,645 samples, 18.23%)</title><rect x="81.6042%" y="581" width="18.2261%" height="15" fill="rgb(246,46,29)" fg:x="5827667494" fg:w="1301595645"/><text x="81.8542%" y="591.50">alloc::raw_vec::finish_grow</text></g><g><title>malloc (44,115,038 samples, 0.62%)</title><rect x="99.2125%" y="565" width="0.6177%" height="15" fill="rgb(246,185,52)" fg:x="7085148101" fg:w="44115038"/><text x="99.4625%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;Advent_of_Code_2024::day6::day6::Matrices&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="581" width="0.0354%" height="15" fill="rgb(252,136,11)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;&gt;&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="565" width="0.0354%" height="15" fill="rgb(219,138,53)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="549" width="0.0354%" height="15" fill="rgb(211,51,23)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;]&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="533" width="0.0354%" height="15" fill="rgb(247,221,28)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt;&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="517" width="0.0354%" height="15" fill="rgb(251,222,45)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="501" width="0.0354%" height="15" fill="rgb(217,162,53)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[Advent_of_Code_2024::day6::day6::VisitDirections]&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="485" width="0.0354%" height="15" fill="rgb(229,93,14)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;Advent_of_Code_2024::day6::day6::VisitDirections&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="469" width="0.0354%" height="15" fill="rgb(209,67,49)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;Advent_of_Code_2024::day6::day6::Direction&gt;&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="453" width="0.0354%" height="15" fill="rgb(213,87,29)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;Advent_of_Code_2024::day6::day6::Direction&gt;&gt; (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="437" width="0.0354%" height="15" fill="rgb(205,151,52)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="421" width="0.0354%" height="15" fill="rgb(253,215,39)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="405" width="0.0354%" height="15" fill="rgb(221,220,41)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="389" width="0.0354%" height="15" fill="rgb(218,133,21)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="373" width="0.0354%" height="15" fill="rgb(221,193,43)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="383.50"></text></g><g><title>[libc.so.6] (2,530,839 samples, 0.04%)</title><rect x="99.8303%" y="357" width="0.0354%" height="15" fill="rgb(240,128,52)" fg:x="7129263139" fg:w="2530839"/><text x="100.0803%" y="367.50"></text></g><g><title>all (7,141,385,538 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(253,114,12)" fg:x="0" fg:w="7141385538"/><text x="0.2500%" y="623.50"></text></g><g><title>Advent_of_Code_ (7,141,385,538 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(215,223,47)" fg:x="0" fg:w="7141385538"/><text x="0.2500%" y="607.50">Advent_of_Code_</text></g><g><title>realloc (9,591,560 samples, 0.13%)</title><rect x="99.8657%" y="581" width="0.1343%" height="15" fill="rgb(248,225,23)" fg:x="7131793978" fg:w="9591560"/><text x="100.1157%" y="591.50"></text></g><g><title>[libc.so.6] (9,591,560 samples, 0.13%)</title><rect x="99.8657%" y="565" width="0.1343%" height="15" fill="rgb(250,108,0)" fg:x="7131793978" fg:w="9591560"/><text x="100.1157%" y="575.50"></text></g></svg></svg>